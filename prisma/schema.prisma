// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(cuid())
  username        String      @unique
  password        String
  email           String      @unique
  firstName       String?
  lastName        String?
  followersNumber Int         @default(0)
  followingNumber Int         @default(0)
  posts           Post[]
  comments        Comments[]
  cats            Cats[]
  Followers       Followers[]
  Following       Following[]
}

model Followers {
  id               String  @id @default(cuid())
  followerUsername String
  followerId       String
  User             User?   @relation(fields: [userId], references: [id])
  userId           String?
}

model Following {
  id               Int     @id @default(autoincrement())
  followeeUsername String
  followeeId       String
  User             User?   @relation(fields: [userId], references: [id])
  userId           String?
}

model Cats {
  id     String  @id @default(cuid())
  name   String
  breed  String
  color  String
  gender String
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Post {
  id          Int        @id @default(autoincrement())
  imageRef    String?
  published   Boolean    @default(true)
  author      User?      @relation(fields: [authorId], references: [id])
  description String
  authorId    String?
  comments    Comments[]
  likes       Likes[]
}

model Likes {
  id     Int   @id @default(autoincrement())
  Post   Post? @relation(fields: [postId], references: [id])
  postId Int?
}

model Comments {
  id       Int    @id @default(autoincrement())
  author   User?  @relation(fields: [authorId], references: [id])
  authorId String
  post     Post?  @relation(fields: [postId], references: [id])
  postId   Int
}
